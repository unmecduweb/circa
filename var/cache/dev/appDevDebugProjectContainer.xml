<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/home/fab/Documents/Pro/www/circa/app</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/home/fab/Documents/Pro/www/circa/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/home/fab/Documents/Pro/www/circa/var/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="MwebAdminBundle">Mweb\AdminBundle\MwebAdminBundle</parameter>
      <parameter key="MwebCoreBundle">Mweb\CoreBundle\MwebCoreBundle</parameter>
      <parameter key="LexikTranslationBundle">Lexik\Bundle\TranslationBundle\LexikTranslationBundle</parameter>
      <parameter key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</parameter>
      <parameter key="VichUploaderBundle">Vich\UploaderBundle\VichUploaderBundle</parameter>
      <parameter key="LiipImagineBundle">Liip\ImagineBundle\LiipImagineBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/sensio/framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="MwebAdminBundle" type="collection">
        <parameter key="parent">FOSUserBundle</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle</parameter>
        <parameter key="namespace">Mweb\AdminBundle</parameter>
      </parameter>
      <parameter key="MwebCoreBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/src/Mweb/CoreBundle</parameter>
        <parameter key="namespace">Mweb\CoreBundle</parameter>
      </parameter>
      <parameter key="LexikTranslationBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\TranslationBundle</parameter>
      </parameter>
      <parameter key="AsseticBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/symfony/assetic-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\AsseticBundle</parameter>
      </parameter>
      <parameter key="FOSUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle</parameter>
        <parameter key="namespace">FOS\UserBundle</parameter>
      </parameter>
      <parameter key="StofDoctrineExtensionsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/stof/doctrine-extensions-bundle</parameter>
        <parameter key="namespace">Stof\DoctrineExtensionsBundle</parameter>
      </parameter>
      <parameter key="VichUploaderBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle</parameter>
        <parameter key="namespace">Vich\UploaderBundle</parameter>
      </parameter>
      <parameter key="LiipImagineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/liip/imagine-bundle</parameter>
        <parameter key="namespace">Liip\ImagineBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="SensioDistributionBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/sensio/distribution-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\DistributionBundle</parameter>
      </parameter>
      <parameter key="SensioGeneratorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/fab/Documents/Pro/www/circa/vendor/sensio/generator-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\GeneratorBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">circa</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">fabfab</parameter>
    <parameter key="locale">fr</parameter>
    <parameter key="locales">fr</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">fr</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/home/fab/Documents/Pro/www/circa/app/../var/sessions/dev</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/home/fab/Documents/Pro/www/circa/var/cache/dev/profiler</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.options.matcher.cache_class">appDevDebugProjectContainerUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevDebugProjectContainerUrlGenerator</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/home/fab/Documents/Pro/www/circa/var/cache/dev/assetic/routing.yml</parameter>
    <parameter key="router.cache_class_prefix">appDevDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/home/fab/Documents/Pro/www/circa/var/cache/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>LiipImagineBundle:Form:form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="monolog.logger.class">Symfony\Bridge\Monolog\Logger</parameter>
    <parameter key="monolog.gelf.publisher.class">Gelf\MessagePublisher</parameter>
    <parameter key="monolog.gelfphp.publisher.class">Gelf\Publisher</parameter>
    <parameter key="monolog.handler.stream.class">Monolog\Handler\StreamHandler</parameter>
    <parameter key="monolog.handler.console.class">Symfony\Bridge\Monolog\Handler\ConsoleHandler</parameter>
    <parameter key="monolog.handler.group.class">Monolog\Handler\GroupHandler</parameter>
    <parameter key="monolog.handler.buffer.class">Monolog\Handler\BufferHandler</parameter>
    <parameter key="monolog.handler.deduplication.class">Monolog\Handler\DeduplicationHandler</parameter>
    <parameter key="monolog.handler.rotating_file.class">Monolog\Handler\RotatingFileHandler</parameter>
    <parameter key="monolog.handler.syslog.class">Monolog\Handler\SyslogHandler</parameter>
    <parameter key="monolog.handler.syslogudp.class">Monolog\Handler\SyslogUdpHandler</parameter>
    <parameter key="monolog.handler.null.class">Monolog\Handler\NullHandler</parameter>
    <parameter key="monolog.handler.test.class">Monolog\Handler\TestHandler</parameter>
    <parameter key="monolog.handler.gelf.class">Monolog\Handler\GelfHandler</parameter>
    <parameter key="monolog.handler.rollbar.class">Monolog\Handler\RollbarHandler</parameter>
    <parameter key="monolog.handler.flowdock.class">Monolog\Handler\FlowdockHandler</parameter>
    <parameter key="monolog.handler.browser_console.class">Monolog\Handler\BrowserConsoleHandler</parameter>
    <parameter key="monolog.handler.firephp.class">Symfony\Bridge\Monolog\Handler\FirePHPHandler</parameter>
    <parameter key="monolog.handler.chromephp.class">Symfony\Bridge\Monolog\Handler\ChromePhpHandler</parameter>
    <parameter key="monolog.handler.debug.class">Symfony\Bridge\Monolog\Handler\DebugHandler</parameter>
    <parameter key="monolog.handler.swift_mailer.class">Symfony\Bridge\Monolog\Handler\SwiftMailerHandler</parameter>
    <parameter key="monolog.handler.native_mailer.class">Monolog\Handler\NativeMailerHandler</parameter>
    <parameter key="monolog.handler.socket.class">Monolog\Handler\SocketHandler</parameter>
    <parameter key="monolog.handler.pushover.class">Monolog\Handler\PushoverHandler</parameter>
    <parameter key="monolog.handler.raven.class">Monolog\Handler\RavenHandler</parameter>
    <parameter key="monolog.handler.newrelic.class">Monolog\Handler\NewRelicHandler</parameter>
    <parameter key="monolog.handler.hipchat.class">Monolog\Handler\HipChatHandler</parameter>
    <parameter key="monolog.handler.slack.class">Monolog\Handler\SlackHandler</parameter>
    <parameter key="monolog.handler.cube.class">Monolog\Handler\CubeHandler</parameter>
    <parameter key="monolog.handler.amqp.class">Monolog\Handler\AmqpHandler</parameter>
    <parameter key="monolog.handler.error_log.class">Monolog\Handler\ErrorLogHandler</parameter>
    <parameter key="monolog.handler.loggly.class">Monolog\Handler\LogglyHandler</parameter>
    <parameter key="monolog.handler.logentries.class">Monolog\Handler\LogEntriesHandler</parameter>
    <parameter key="monolog.handler.whatfailuregroup.class">Monolog\Handler\WhatFailureGroupHandler</parameter>
    <parameter key="monolog.activation_strategy.not_found.class">Symfony\Bundle\MonologBundle\NotFoundActivationStrategy</parameter>
    <parameter key="monolog.handler.fingers_crossed.class">Monolog\Handler\FingersCrossedHandler</parameter>
    <parameter key="monolog.handler.fingers_crossed.error_level_activation_strategy.class">Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy</parameter>
    <parameter key="monolog.handler.filter.class">Monolog\Handler\FilterHandler</parameter>
    <parameter key="monolog.handler.mongo.class">Monolog\Handler\MongoDBHandler</parameter>
    <parameter key="monolog.mongo.client.class">MongoClient</parameter>
    <parameter key="monolog.handler.elasticsearch.class">Monolog\Handler\ElasticSearchHandler</parameter>
    <parameter key="monolog.elastica.client.class">Elastica\Client</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">127.0.0.1</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/home/fab/Documents/Pro/www/circa/var/cache/dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/home/fab/Documents/Pro/www/circa/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="mweb_admin.entities" type="collection">
      <parameter key="page" type="collection">
        <parameter key="beautyName">Pages</parameter>
        <parameter key="menu">page</parameter>
        <parameter key="class">Mweb\CoreBundle\Entity\Content</parameter>
        <parameter key="form">Mweb\CoreBundle\Form\ContentType</parameter>
        <parameter key="listProperties" type="collection">
          <parameter key="name" type="collection">
            <parameter key="dataName">title</parameter>
            <parameter key="beautyName">Nom</parameter>
            <parameter key="type">string</parameter>
          </parameter>
          <parameter key="updated" type="collection">
            <parameter key="dataName">updated</parameter>
            <parameter key="beautyName">Mis à jour</parameter>
            <parameter key="type">date</parameter>
          </parameter>
          <parameter key="created" type="collection">
            <parameter key="dataName">created</parameter>
            <parameter key="beautyName">Ajouté le</parameter>
            <parameter key="type">date</parameter>
          </parameter>
          <parameter key="status" type="collection">
            <parameter key="dataName">status</parameter>
            <parameter key="beautyName">En ligne</parameter>
            <parameter key="type">boolean</parameter>
          </parameter>
        </parameter>
        <parameter key="views">default</parameter>
        <parameter key="unique">false</parameter>
      </parameter>
      <parameter key="news" type="collection">
        <parameter key="beautyName">Actualités</parameter>
        <parameter key="menu">news</parameter>
        <parameter key="class">Mweb\CoreBundle\Entity\News</parameter>
        <parameter key="form">\Mweb\CoreBundle\Form\NewsType</parameter>
        <parameter key="views">default</parameter>
        <parameter key="listProperties" type="collection">
          <parameter key="name" type="collection">
            <parameter key="dataName">title</parameter>
            <parameter key="beautyName">Nom</parameter>
            <parameter key="type">string</parameter>
          </parameter>
          <parameter key="updated" type="collection">
            <parameter key="dataName">updated</parameter>
            <parameter key="beautyName">Mis à jour</parameter>
            <parameter key="type">date</parameter>
          </parameter>
          <parameter key="created" type="collection">
            <parameter key="dataName">created</parameter>
            <parameter key="beautyName">Ajouté le</parameter>
            <parameter key="type">date</parameter>
          </parameter>
          <parameter key="status" type="collection">
            <parameter key="dataName">status</parameter>
            <parameter key="beautyName">En ligne</parameter>
            <parameter key="type">boolean</parameter>
          </parameter>
        </parameter>
        <parameter key="unique">false</parameter>
      </parameter>
      <parameter key="artist" type="collection">
        <parameter key="beautyName">Artistes</parameter>
        <parameter key="menu">artist</parameter>
        <parameter key="class">Mweb\CoreBundle\Entity\Artist</parameter>
        <parameter key="form">\Mweb\CoreBundle\Form\ArtistType</parameter>
        <parameter key="views">default</parameter>
        <parameter key="listProperties" type="collection">
          <parameter key="name" type="collection">
            <parameter key="dataName">title</parameter>
            <parameter key="beautyName">Nom</parameter>
            <parameter key="type">string</parameter>
          </parameter>
          <parameter key="updated" type="collection">
            <parameter key="dataName">updated</parameter>
            <parameter key="beautyName">Mis à jour</parameter>
            <parameter key="type">date</parameter>
          </parameter>
          <parameter key="created" type="collection">
            <parameter key="dataName">created</parameter>
            <parameter key="beautyName">Ajouté le</parameter>
            <parameter key="type">date</parameter>
          </parameter>
          <parameter key="status" type="collection">
            <parameter key="dataName">status</parameter>
            <parameter key="beautyName">En ligne</parameter>
            <parameter key="type">boolean</parameter>
          </parameter>
        </parameter>
        <parameter key="unique">false</parameter>
      </parameter>
    </parameter>
    <parameter key="mweb_admin.menus" type="collection">
      <parameter key="page" type="collection">
        <parameter key="beautyName">Pages</parameter>
      </parameter>
      <parameter key="news" type="collection">
        <parameter key="beautyName">Actualités</parameter>
      </parameter>
      <parameter key="artist" type="collection">
        <parameter key="beautyName">Artistes</parameter>
      </parameter>
    </parameter>
    <parameter key="mweb_admin.noillu">niche</parameter>
    <parameter key="lexik_translation.translator.class">Lexik\Bundle\TranslationBundle\Translation\Translator</parameter>
    <parameter key="lexik_translation.loader.database.class">Lexik\Bundle\TranslationBundle\Translation\Loader\DatabaseLoader</parameter>
    <parameter key="lexik_translation.trans_unit.manager.class">Lexik\Bundle\TranslationBundle\Manager\TransUnitManager</parameter>
    <parameter key="lexik_translation.file.manager.class">Lexik\Bundle\TranslationBundle\Manager\FileManager</parameter>
    <parameter key="lexik_translation.locale.manager.class">Lexik\Bundle\TranslationBundle\Manager\LocaleManager</parameter>
    <parameter key="lexik_translation.importer.file.class">Lexik\Bundle\TranslationBundle\Translation\Importer\FileImporter</parameter>
    <parameter key="lexik_translation.exporter_collector.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\ExporterCollector</parameter>
    <parameter key="lexik_translation.exporter.xliff.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\XliffExporter</parameter>
    <parameter key="lexik_translation.exporter.json.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\JsonExporter</parameter>
    <parameter key="lexik_translation.exporter.yml.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\YamlExporter</parameter>
    <parameter key="lexik_translation.exporter.php.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\PhpExporter</parameter>
    <parameter key="lexik_translation.orm.translation_storage.class">Lexik\Bundle\TranslationBundle\Storage\DoctrineORMStorage</parameter>
    <parameter key="lexik_translation.orm.trans_unit.class">Lexik\Bundle\TranslationBundle\Entity\TransUnit</parameter>
    <parameter key="lexik_translation.orm.translation.class">Lexik\Bundle\TranslationBundle\Entity\Translation</parameter>
    <parameter key="lexik_translation.orm.file.class">Lexik\Bundle\TranslationBundle\Entity\File</parameter>
    <parameter key="lexik_translation.mongodb.translation_storage.class">Lexik\Bundle\TranslationBundle\Storage\DoctrineMongoDBStorage</parameter>
    <parameter key="lexik_translation.mongodb.trans_unit.class">Lexik\Bundle\TranslationBundle\Document\TransUnit</parameter>
    <parameter key="lexik_translation.mongodb.translation.class">Lexik\Bundle\TranslationBundle\Document\Translation</parameter>
    <parameter key="lexik_translation.mongodb.file.class">Lexik\Bundle\TranslationBundle\Document\File</parameter>
    <parameter key="lexik_translation.propel.translation_storage.class">Lexik\Bundle\TranslationBundle\Storage\PropelStorage</parameter>
    <parameter key="lexik_translation.propel.trans_unit.class">Lexik\Bundle\TranslationBundle\Propel\TransUnit</parameter>
    <parameter key="lexik_translation.propel.translation.class">Lexik\Bundle\TranslationBundle\Propel\Translation</parameter>
    <parameter key="lexik_translation.propel.file.class">Lexik\Bundle\TranslationBundle\Propel\File</parameter>
    <parameter key="lexik_translation.data_grid.formatter.class">Lexik\Bundle\TranslationBundle\Util\DataGrid\DataGridFormatter</parameter>
    <parameter key="lexik_translation.data_grid.request_handler.class">Lexik\Bundle\TranslationBundle\Util\DataGrid\DataGridRequestHandler</parameter>
    <parameter key="lexik_translation.overview.stats_aggregator.class">Lexik\Bundle\TranslationBundle\Util\Overview\StatsAggregator</parameter>
    <parameter key="lexik_translation.form.handler.trans_unit.class">Lexik\Bundle\TranslationBundle\Form\Handler\TransUnitFormHandler</parameter>
    <parameter key="lexik_translation.listener.get_database_resources.class">Lexik\Bundle\TranslationBundle\EventDispatcher\GetDatabaseResourcesListener</parameter>
    <parameter key="lexik_translation.listener.clean_translation_cache.class">Lexik\Bundle\TranslationBundle\EventDispatcher\CleanTranslationCacheListener</parameter>
    <parameter key="lexik_translation.token_finder.class">Lexik\Bundle\TranslationBundle\Util\Profiler\TokenFinder</parameter>
    <parameter key="lexik_translation.importer.case_insensitive">false</parameter>
    <parameter key="lexik_translation.token_finder.limit">15</parameter>
    <parameter key="lexik_translation.managed_locales" type="collection">
      <parameter>fr</parameter>
    </parameter>
    <parameter key="lexik_translation.fallback_locale" type="collection">
      <parameter>fr</parameter>
    </parameter>
    <parameter key="lexik_translation.storage" type="collection">
      <parameter key="type">orm</parameter>
    </parameter>
    <parameter key="lexik_translation.base_layout">LexikTranslationBundle::layout.html.twig</parameter>
    <parameter key="lexik_translation.grid_input_type">text</parameter>
    <parameter key="lexik_translation.grid_toggle_similar">false</parameter>
    <parameter key="lexik_translation.auto_cache_clean">true</parameter>
    <parameter key="lexik_translation.dev_tools.enable">false</parameter>
    <parameter key="lexik_translation.dev_tools.create_missing">false</parameter>
    <parameter key="lexik_translation.dev_tools.file_format">yml</parameter>
    <parameter key="lexik_translation.exporter.json.hierarchical_format">false</parameter>
    <parameter key="lexik_translation.exporter.yml.use_tree">false</parameter>
    <parameter key="lexik_translation.storage.type">orm</parameter>
    <parameter key="assetic.asset_factory.class">Symfony\Bundle\AsseticBundle\Factory\AssetFactory</parameter>
    <parameter key="assetic.asset_manager.class">Assetic\Factory\LazyAssetManager</parameter>
    <parameter key="assetic.asset_manager_cache_warmer.class">Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer</parameter>
    <parameter key="assetic.cached_formula_loader.class">Assetic\Factory\Loader\CachedFormulaLoader</parameter>
    <parameter key="assetic.config_cache.class">Assetic\Cache\ConfigCache</parameter>
    <parameter key="assetic.config_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader</parameter>
    <parameter key="assetic.config_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource</parameter>
    <parameter key="assetic.coalescing_directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource</parameter>
    <parameter key="assetic.directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource</parameter>
    <parameter key="assetic.filter_manager.class">Symfony\Bundle\AsseticBundle\FilterManager</parameter>
    <parameter key="assetic.worker.ensure_filter.class">Assetic\Factory\Worker\EnsureFilterWorker</parameter>
    <parameter key="assetic.worker.cache_busting.class">Assetic\Factory\Worker\CacheBustingWorker</parameter>
    <parameter key="assetic.value_supplier.class">Symfony\Bundle\AsseticBundle\DefaultValueSupplier</parameter>
    <parameter key="assetic.node.paths" type="collection"/>
    <parameter key="assetic.cache_dir">/home/fab/Documents/Pro/www/circa/var/cache/dev/assetic</parameter>
    <parameter key="assetic.bundles" type="collection">
      <parameter>FrameworkBundle</parameter>
      <parameter>SecurityBundle</parameter>
      <parameter>TwigBundle</parameter>
      <parameter>MonologBundle</parameter>
      <parameter>SwiftmailerBundle</parameter>
      <parameter>DoctrineBundle</parameter>
      <parameter>SensioFrameworkExtraBundle</parameter>
      <parameter>MwebAdminBundle</parameter>
      <parameter>MwebCoreBundle</parameter>
      <parameter>LexikTranslationBundle</parameter>
      <parameter>AsseticBundle</parameter>
      <parameter>FOSUserBundle</parameter>
      <parameter>StofDoctrineExtensionsBundle</parameter>
      <parameter>VichUploaderBundle</parameter>
      <parameter>LiipImagineBundle</parameter>
      <parameter>DebugBundle</parameter>
      <parameter>WebProfilerBundle</parameter>
      <parameter>SensioDistributionBundle</parameter>
      <parameter>SensioGeneratorBundle</parameter>
    </parameter>
    <parameter key="assetic.twig_extension.class">Symfony\Bundle\AsseticBundle\Twig\AsseticExtension</parameter>
    <parameter key="assetic.twig_formula_loader.class">Assetic\Extension\Twig\TwigFormulaLoader</parameter>
    <parameter key="assetic.helper.dynamic.class">Symfony\Bundle\AsseticBundle\Templating\DynamicAsseticHelper</parameter>
    <parameter key="assetic.helper.static.class">Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper</parameter>
    <parameter key="assetic.php_formula_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader</parameter>
    <parameter key="assetic.debug">true</parameter>
    <parameter key="assetic.use_controller">true</parameter>
    <parameter key="assetic.enable_profiler">false</parameter>
    <parameter key="assetic.read_from">/home/fab/Documents/Pro/www/circa/app/../web</parameter>
    <parameter key="assetic.write_to">/home/fab/Documents/Pro/www/circa/app/../web</parameter>
    <parameter key="assetic.variables" type="collection"/>
    <parameter key="assetic.java.bin">/usr/bin/java</parameter>
    <parameter key="assetic.node.bin">/usr/bin/node</parameter>
    <parameter key="assetic.ruby.bin">/usr/bin/ruby</parameter>
    <parameter key="assetic.sass.bin">/usr/bin/sass</parameter>
    <parameter key="assetic.reactjsx.bin">/usr/bin/jsx</parameter>
    <parameter key="assetic.filter.cssrewrite.class">Assetic\Filter\CssRewriteFilter</parameter>
    <parameter key="assetic.twig_extension.functions" type="collection"/>
    <parameter key="assetic.controller.class">Symfony\Bundle\AsseticBundle\Controller\AsseticController</parameter>
    <parameter key="assetic.routing_loader.class">Symfony\Bundle\AsseticBundle\Routing\AsseticLoader</parameter>
    <parameter key="assetic.cache.class">Assetic\Cache\FilesystemCache</parameter>
    <parameter key="assetic.use_controller_worker.class">Symfony\Bundle\AsseticBundle\Factory\Worker\UseControllerWorker</parameter>
    <parameter key="assetic.request_listener.class">Symfony\Bundle\AsseticBundle\EventListener\RequestListener</parameter>
    <parameter key="fos_user.backend_type_orm">true</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\EventListener\LastLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">@FOSUser/Resetting/email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">@FOSUser/Registration/email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">Mweb\AdminBundle\Entity\User</parameter>
    <parameter key="fos_user.profile.form.type">FOS\UserBundle\Form\Type\ProfileFormType</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="blop@niche.com">FAB</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">false</parameter>
    <parameter key="fos_user.registration.form.type">FOS\UserBundle\Form\Type\RegistrationFormType</parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">FOS\UserBundle\Form\Type\ChangePasswordFormType</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="blop@niche.com">FAB</parameter>
    </parameter>
    <parameter key="fos_user.resetting.retry_ttl">7200</parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">FOS\UserBundle\Form\Type\ResettingFormType</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="stof_doctrine_extensions.event_listener.locale.class">Stof\DoctrineExtensionsBundle\EventListener\LocaleListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.logger.class">Stof\DoctrineExtensionsBundle\EventListener\LoggerListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.blame.class">Stof\DoctrineExtensionsBundle\EventListener\BlameListener</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.manager.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.mime_type_guesser.class">Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.default_file_info.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</parameter>
    <parameter key="stof_doctrine_extensions.default_locale">fr_FR</parameter>
    <parameter key="stof_doctrine_extensions.default_file_path">null</parameter>
    <parameter key="stof_doctrine_extensions.translation_fallback">true</parameter>
    <parameter key="stof_doctrine_extensions.persist_default_translation">false</parameter>
    <parameter key="stof_doctrine_extensions.skip_translation_on_load">false</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.validate_writable_directory">true</parameter>
    <parameter key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</parameter>
    <parameter key="vich_uploader.default_filename_attribute_suffix">_name</parameter>
    <parameter key="vich_uploader.mappings" type="collection">
      <parameter key="content_image" type="collection">
        <parameter key="uri_prefix">/files/uploads/content</parameter>
        <parameter key="upload_destination">/home/fab/Documents/Pro/www/circa/app/../web/files/uploads/content</parameter>
        <parameter key="inject_on_load">true</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="directory_namer">null</parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
      <parameter key="parallax_image" type="collection">
        <parameter key="uri_prefix">/files/uploads/content</parameter>
        <parameter key="upload_destination">/home/fab/Documents/Pro/www/circa/app/../web/files/uploads/content</parameter>
        <parameter key="inject_on_load">true</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="directory_namer">null</parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
      <parameter key="news_image" type="collection">
        <parameter key="uri_prefix">/files/uploads/news</parameter>
        <parameter key="upload_destination">/home/fab/Documents/Pro/www/circa/app/../web/files/uploads/news</parameter>
        <parameter key="inject_on_load">true</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="directory_namer">null</parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
      <parameter key="artist_image" type="collection">
        <parameter key="uri_prefix">/files/uploads/artist</parameter>
        <parameter key="upload_destination">/home/fab/Documents/Pro/www/circa/app/../web/files/uploads/artist</parameter>
        <parameter key="inject_on_load">true</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="directory_namer">null</parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
    </parameter>
    <parameter key="vich_uploader.file_injector.class">Vich\UploaderBundle\Injector\FileInjector</parameter>
    <parameter key="liip_imagine.filter.configuration.class">Liip\ImagineBundle\Imagine\Filter\FilterConfiguration</parameter>
    <parameter key="liip_imagine.filter.manager.class">Liip\ImagineBundle\Imagine\Filter\FilterManager</parameter>
    <parameter key="liip_imagine.data.manager.class">Liip\ImagineBundle\Imagine\Data\DataManager</parameter>
    <parameter key="liip_imagine.cache.manager.class">Liip\ImagineBundle\Imagine\Cache\CacheManager</parameter>
    <parameter key="liip_imagine.cache.signer.class">Liip\ImagineBundle\Imagine\Cache\Signer</parameter>
    <parameter key="liip_imagine.binary.mime_type_guesser.class">Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser</parameter>
    <parameter key="liip_imagine.controller.class">Liip\ImagineBundle\Controller\ImagineController</parameter>
    <parameter key="liip_imagine.twig.extension.class">Liip\ImagineBundle\Templating\ImagineExtension</parameter>
    <parameter key="liip_imagine.templating.helper.class">Liip\ImagineBundle\Templating\Helper\ImagineHelper</parameter>
    <parameter key="liip_imagine.gd.class">Imagine\Gd\Imagine</parameter>
    <parameter key="liip_imagine.imagick.class">Imagine\Imagick\Imagine</parameter>
    <parameter key="liip_imagine.gmagick.class">Imagine\Gmagick\Imagine</parameter>
    <parameter key="liip_imagine.filter.loader.relative_resize.class">Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.resize.class">Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.thumbnail.class">Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.crop.class">Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.grayscale.class">Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.paste.class">Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.watermark.class">Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.strip.class">Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.background.class">Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.scale.class">Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.upscale.class">Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.downscale.class">Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.auto_rotate.class">Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.rotate.class">Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.interlace.class">Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader</parameter>
    <parameter key="liip_imagine.binary.loader.filesystem.class">Liip\ImagineBundle\Binary\Loader\FileSystemLoader</parameter>
    <parameter key="liip_imagine.binary.loader.stream.class">Liip\ImagineBundle\Binary\Loader\StreamLoader</parameter>
    <parameter key="liip_imagine.binary.loader.flysystem.class">Liip\ImagineBundle\Binary\Loader\FlysystemLoader</parameter>
    <parameter key="liip_imagine.cache.resolver.web_path.class">Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.no_cache_web_path.class">Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.aws_s3.class">Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver</parameter>
    <parameter key="liip_imagine.cache.resolver.cache.class">Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.flysystem.class">Liip\ImagineBundle\Imagine\Cache\Resolver\FlysystemResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.proxy.class">Liip\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver</parameter>
    <parameter key="liip_imagine.form.type.image.class">Liip\ImagineBundle\Form\Type\ImageType</parameter>
    <parameter key="liip_imagine.meta_data.reader.class">Imagine\Image\Metadata\ExifMetadataReader</parameter>
    <parameter key="liip_imagine.filter.post_processor.jpegoptim.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor</parameter>
    <parameter key="liip_imagine.jpegoptim.binary">/usr/bin/jpegoptim</parameter>
    <parameter key="liip_imagine.jpegoptim.stripall">true</parameter>
    <parameter key="liip_imagine.jpegoptim.max">null</parameter>
    <parameter key="liip_imagine.jpegoptim.progressive">true</parameter>
    <parameter key="liip_imagine.jpegoptim.tempdir">null</parameter>
    <parameter key="liip_imagine.filter.post_processor.optipng.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor</parameter>
    <parameter key="liip_imagine.optipng.binary">/usr/bin/optipng</parameter>
    <parameter key="liip_imagine.optipng.level">7</parameter>
    <parameter key="liip_imagine.optipng.stripall">true</parameter>
    <parameter key="liip_imagine.optipng.tempdir">null</parameter>
    <parameter key="liip_imagine.filter.post_processor.pngquant.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor</parameter>
    <parameter key="liip_imagine.pngquant.binary">/usr/bin/pngquant</parameter>
    <parameter key="liip_imagine.filter.post_processor.mozjpeg.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor</parameter>
    <parameter key="liip_imagine.mozjpeg.binary">/opt/mozjpeg/bin/cjpeg</parameter>
    <parameter key="liip_imagine.cache.resolver.default">default</parameter>
    <parameter key="liip_imagine.default_image">null</parameter>
    <parameter key="liip_imagine.filter_sets" type="collection">
      <parameter key="cache" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="filters" type="collection"/>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="partner" type="collection">
        <parameter key="quality">150</parameter>
        <parameter key="filters" type="collection">
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>150</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="news" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="filters" type="collection">
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>420</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="parallax" type="collection">
        <parameter key="quality">80</parameter>
        <parameter key="filters" type="collection">
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>1920</parameter>
              <parameter>400</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="artist" type="collection">
        <parameter key="quality">80</parameter>
        <parameter key="filters" type="collection">
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>800</parameter>
              <parameter>600</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
          </parameter>
        </parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.binary.loader.default">default</parameter>
    <parameter key="liip_imagine.controller.filter_action">liip_imagine.controller:filterAction</parameter>
    <parameter key="liip_imagine.controller.filter_runtime_action">liip_imagine.controller:filterRuntimeAction</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>sensio_distribution.security_checker.command</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument>fr</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="20"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/home/fab/Documents/Pro/www/circa/app/Resources</argument>
              </service>
            </argument>
            <argument type="service" id="templating.locator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="10"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
        <argument type="service" id="kernel.class_cache.cache_warmer"/>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="lexik_translation.translator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/home/fab/Documents/Pro/www/circa/app/Resources</argument>
              </service>
            </argument>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="twig"/>
            <argument type="service">
              <service class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
                <argument type="service" id="kernel"/>
                <argument>/home/fab/Documents/Pro/www/circa/app</argument>
                <argument type="collection"/>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <tag name="kernel.cache_warmer"/>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
            <tag name="kernel.cache_clearer"/>
            <call method="addPool">
              <argument type="service" id="cache.app"/>
            </call>
            <call method="addPool">
              <argument type="service" id="cache.system"/>
            </call>
            <call method="addPool">
              <argument type="service">
                <service class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
                  <tag name="cache.pool"/>
                  <argument>cObhH-Rsq5</argument>
                  <argument>0</argument>
                  <argument>xCcFn5-QycqAImVYNAxZ2+</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/pools</argument>
                  <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
                  <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
                </service>
              </argument>
            </call>
            <call method="addPool">
              <argument type="service">
                <service class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
                  <tag name="cache.pool"/>
                  <argument>hzhvmYrFrr</argument>
                  <argument>0</argument>
                  <argument>xCcFn5-QycqAImVYNAxZ2+</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/pools</argument>
                  <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
                  <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
                </service>
              </argument>
            </call>
          </service>
        </argument>
      </argument>
    </service>
    <service id="service_container" synthetic="true">
      <autowiring-type>Symfony\Component\DependencyInjection\ContainerInterface</autowiring-type>
      <autowiring-type>Symfony\Component\DependencyInjection\Container</autowiring-type>
    </service>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/home/fab/Documents/Pro/www/circa/app/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
            <tag name="config_cache.resource_checker" priority="-990"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <call method="addRendererService">
        <argument>inline</argument>
        <argument>fragment.renderer.inline</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>esi</argument>
        <argument>fragment.renderer.esi</argument>
      </call>
      <call method="addRendererService">
        <argument>ssi</argument>
        <argument>fragment.renderer.ssi</argument>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="ssi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.selector"/>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
        <argument key="lexik_translation.loader.database" type="collection">
          <argument>database</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/home/fab/Documents/Pro/www/circa/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="zh_TW" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.ro.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ro.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ro.yml</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ar.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ar.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.ar.yml</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.it.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.it.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.it.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.it.yml</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.lt.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lt.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lt.yml</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lb.yml</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.sk.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sk.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sk.yml</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.da.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.da.yml</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lv.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lv.yml</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.uk.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.uk.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.uk.yml</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.ru.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ru.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ru.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.ru.yml</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.id.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.id.yml</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt_BR.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt_BR.yml</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hu.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hu.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.hu.yml</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.th.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.th.yml</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pl.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pl.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.pl.yml</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hr.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hr.yml</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.nl.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nl.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nl.yml</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.et.yml</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fa.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fa.yml</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.pt.yml</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ca.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ca.yml</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ja.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ja.yml</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bg.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bg.yml</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.zh_CN.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.zh_CN.yml</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.he.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.he.yml</argument>
          </argument>
          <argument key="af" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.af.yml</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.de.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.de.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.de.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.de.yml</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sl.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sl.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.sl.yml</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle/Resources/translations/messages.en.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/src/Mweb/CoreBundle/Resources/translations/messages.en.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.en.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.en.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.en.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.en.yml</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.tr.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.tr.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.tr.yml</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.cs.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.cs.yml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.es.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.es.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.es.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.es.yml</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sv.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sv.yml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.el.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.el.yml</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fi.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fi.yml</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.eu.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.eu.yml</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle/Resources/translations/messages.fr.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/src/Mweb/CoreBundle/Resources/translations/messages.fr.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.fr.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fr.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fr.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.fr.yml</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.vi.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.vi.yml</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sr_Latn.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sr_Latn.yml</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ua.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nb.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nb.yml</argument>
          </argument>
          <argument key="ky" type="collection">
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ky.yml</argument>
            <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ky.yml</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>fr</argument>
        </argument>
      </call>
      <autowiring-type>Symfony\Component\Translation\TranslatorInterface</autowiring-type>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
      <call method="addLoader">
        <argument>database</argument>
        <argument type="service" id="lexik_translation.loader.database"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <tag name="cache.pool"/>
      <argument>-+K6s939P3</argument>
      <argument>0</argument>
      <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <argument>KRq3WbYif4</argument>
      <argument>0</argument>
      <argument>xCcFn5-QycqAImVYNAxZ2+</argument>
      <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="cookie_httponly">true</argument>
        <argument key="gc_probability">1</argument>
      </argument>
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="Symfony\Component\Form\Extension\Core\Type\FormType">form.type.form</argument>
              <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType">form.type.choice</argument>
              <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType">form.type.entity</argument>
              <argument key="FOS\UserBundle\Form\Type\UsernameFormType">fos_user.username_form_type</argument>
              <argument key="FOS\UserBundle\Form\Type\ProfileFormType">fos_user.profile.form.type</argument>
              <argument key="FOS\UserBundle\Form\Type\RegistrationFormType">fos_user.registration.form.type</argument>
              <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType">fos_user.change_password.form.type</argument>
              <argument key="FOS\UserBundle\Form\Type\ResettingFormType">fos_user.resetting.form.type</argument>
              <argument key="Vich\UploaderBundle\Form\Type\VichFileType">vich_uploader.form.type.file</argument>
              <argument key="Vich\UploaderBundle\Form\Type\VichImageType">vich_uploader.form.type.image</argument>
              <argument key="Liip\ImagineBundle\Form\Type\ImageType">liip_imagine.form.type.image</argument>
            </argument>
            <argument type="collection">
              <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="collection">
                <argument>form.type_extension.form.http_foundation</argument>
                <argument>form.type_extension.form.validator</argument>
                <argument>form.type_extension.upload.validator</argument>
                <argument>form.type_extension.csrf</argument>
                <argument>form.type_extension.form.data_collector</argument>
              </argument>
              <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="collection">
                <argument>form.type_extension.repeated.validator</argument>
              </argument>
              <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="collection">
                <argument>form.type_extension.submit.validator</argument>
              </argument>
            </argument>
            <argument type="collection">
              <argument>form.type_guesser.validator</argument>
              <argument>form.type_guesser.doctrine</argument>
            </argument>
          </service>
        </argument>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service">
        <service class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
              <argument type="service">
                <service class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
              </argument>
              <argument type="service" id="property_accessor"/>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.range" class="Symfony\Component\Form\Extension\Core\Type\RangeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service">
        <service class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
          <argument type="service" id="form.server_params"/>
        </service>
      </argument>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
          <argument type="service" id="session"/>
        </service>
      </argument>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service">
        <service class="Symfony\Component\Asset\PathPackage" public="false">
          <argument></argument>
          <argument type="service">
            <service class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
          </argument>
          <argument type="service" id="assets.context"/>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev</argument>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory" public="false">
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="validator.expression">validator.expression</argument>
              <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator">validator.expression</argument>
              <argument key="Symfony\Component\Validator\Constraints\EmailValidator">validator.email</argument>
              <argument key="security.validator.user_password">security.validator.user_password</argument>
              <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">security.validator.user_password</argument>
              <argument key="doctrine.orm.validator.unique">doctrine.orm.validator.unique</argument>
              <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">doctrine.orm.validator.unique</argument>
            </argument>
          </service>
        </argument>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
          <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service">
            <service class="FOS\UserBundle\Validator\Initializer" public="false">
              <tag name="validator.initializer"/>
              <argument type="service" id="fos_user.util.canonical_fields_updater"/>
            </service>
          </argument>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/DependencyInjection/Compiler/../../Resources/config/storage-validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler">
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
          <argument>file:/home/fab/Documents/Pro/www/circa/var/cache/dev/profiler</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
            <argument type="service" id="kernel" on-invalid="ignore"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
            <tag name="monolog.logger" channel="profiler"/>
            <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
            <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
            <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            <argument type="service" id="security.role_hierarchy"/>
            <argument type="service" id="security.logout_url_generator"/>
            <argument type="service" id="debug.security.access.decision_manager"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
            <argument type="service" id="twig.profile"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
            <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
            <argument type="service" id="doctrine"/>
            <call method="addLogger">
              <argument>default</argument>
              <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
            <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
            <call method="setKernel">
              <argument type="service" id="kernel" on-invalid="ignore"/>
            </call>
          </service>
        </argument>
      </call>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.request" class="Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Bundle\AsseticBundle\Routing\AsseticLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="assetic.asset_manager"/>
                <argument type="collection"/>
              </service>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>28586</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>data_collector.router</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>mweb.admin.adminmenu</argument>
          <argument>showMenu</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>lexik_translation.event.get_database_resources</argument>
        <argument type="collection">
          <argument>lexik_translation.listener.get_database_resources</argument>
          <argument>onGetDatabaseResources</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>lexik_translation.listener.clean_translation_cache</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>assetic.request_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>translator_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\TranslatorListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>validate_request_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ValidateRequestListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session.save_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\SaveSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fragment.listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\FragmentListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>profiler_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ProfilerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>data_collector.request</argument>
        <argument>Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.firewall</argument>
        <argument>Symfony\Component\Security\Http\Firewall</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.rememberme.response_listener</argument>
        <argument>Symfony\Component\Security\Http\RememberMe\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>twig.exception_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>monolog.handler.console</argument>
        <argument>Symfony\Bridge\Monolog\Handler\ConsoleHandler</argument>
      </call>
      <call method="addSubscriberService">
        <argument>swiftmailer.email_sender.listener</argument>
        <argument>Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.controller.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.converter.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.view.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.cache.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.security.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.security.interactive_login_listener</argument>
        <argument>FOS\UserBundle\EventListener\LastLoginListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.listener.authentication</argument>
        <argument>FOS\UserBundle\EventListener\AuthenticationListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.listener.flash</argument>
        <argument>FOS\UserBundle\EventListener\FlashListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.listener.resetting</argument>
        <argument>FOS\UserBundle\EventListener\ResettingListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>stof_doctrine_extensions.event_listener.locale</argument>
        <argument>Stof\DoctrineExtensionsBundle\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.dump_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DumpListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>web_profiler.debug_toolbar</argument>
        <argument>Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
          <argument type="service" id="service_container"/>
          <argument type="service" id="controller_name_converter"/>
          <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
          <argument type="service">
            <service class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
          </argument>
          <argument type="collection">
            <argument type="service">
              <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
                <tag name="controller.argument_value_resolver" priority="100"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
                <tag name="controller.argument_value_resolver" priority="50"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
                <tag name="controller.argument_value_resolver" priority="-100"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
                <tag name="controller.argument_value_resolver" priority="-150"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="fos_user.user_provider.username"/>
            <argument type="service" id="security.user_checker.main"/>
            <argument>main</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>58a9f1ddc47371.31597150</argument>
          </service>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection">
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
      </argument>
    </service>
    <service id="security.firewall" class="Symfony\Component\Security\Http\Firewall">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="security.firewall.map.context.dev" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.main" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/</argument>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\DebugAccessDecisionManager" public="false">
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
          <argument type="collection"/>
          <argument>affirmative</argument>
          <argument>false</argument>
          <argument>true</argument>
        </service>
      </argument>
      <call method="setVoters">
        <argument type="collection">
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
              <tag name="security.voter" priority="245"/>
              <argument type="service" id="security.role_hierarchy"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
              <tag name="security.voter" priority="245"/>
              <argument type="service">
                <service class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
              </argument>
              <argument type="service" id="security.authentication.trust_resolver"/>
              <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
              <tag name="security.voter" priority="250"/>
              <argument type="service" id="security.authentication.trust_resolver"/>
            </service>
          </argument>
        </argument>
      </call>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
            <tag name="monolog.logger" channel="security"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\AccessMap" public="false">
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/login$</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/register</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/resetting</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/admin/</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>ROLE_ADMIN</argument>
                  </argument>
                  <argument>null</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
                <argument>80</argument>
                <argument>443</argument>
              </service>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="collection">
              <argument type="service" id="fos_user.user_provider.username"/>
            </argument>
            <argument>main</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument type="service" id="security.authentication.trust_resolver"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                <argument type="service" id="router" on-invalid="null"/>
                <argument type="service" id="router" on-invalid="null"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service">
                  <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                    <argument type="service" id="router" on-invalid="null"/>
                    <argument type="service" id="router" on-invalid="null"/>
                  </service>
                </argument>
                <argument>/</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">logout</argument>
              <argument key="logout_path">/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service">
                <service class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.fos_userbundle"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                <argument type="service" id="router" on-invalid="null"/>
                <argument type="service" id="router" on-invalid="null"/>
              </service>
            </argument>
            <argument>main</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service">
                  <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                    <argument type="service" id="router" on-invalid="null"/>
                    <argument type="service" id="router" on-invalid="null"/>
                  </service>
                </argument>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">fos_user_security_login</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>main</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service">
                  <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                    <argument type="service" id="router" on-invalid="null"/>
                    <argument type="service" id="router" on-invalid="null"/>
                  </service>
                </argument>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">fos_user_security_login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="check_path">fos_user_security_check</argument>
              <argument key="use_forward">false</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument type="service" id="security.csrf.token_manager"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument>58a9f1ddc47371.31597150</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
            <tag name="monolog.logger" channel="security"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="debug.security.access.decision_manager"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\AccessMap" public="false">
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/login$</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/register</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/resetting</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/admin/</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>ROLE_ADMIN</argument>
                  </argument>
                  <argument>null</argument>
                </call>
              </service>
            </argument>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
              <argument type="service" id="router" on-invalid="null"/>
              <argument type="service" id="router" on-invalid="null"/>
            </service>
          </argument>
          <argument>main</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service">
                <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                  <argument type="service" id="router" on-invalid="null"/>
                  <argument type="service" id="router" on-invalid="null"/>
                </service>
              </argument>
              <argument>fos_user_security_login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="twig" class="Twig_Environment">
      <argument type="service" id="twig.loader"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
        </argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/home/fab/Documents/Pro/www/circa/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="paths" type="collection"/>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.logout_url_generator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="twig.profile"/>
            <argument type="service" id="debug.stopwatch" on-invalid="null"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="translator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="assets.packages"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
            <tag name="twig.extension"/>
            <argument>null</argument>
            <argument>/home/fab/Documents/Pro/www/circa/app</argument>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="router.request_context" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Debug" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Form\TwigRenderer" public="false">
                <argument type="service">
                  <service class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
                    <argument type="collection">
                      <argument>form_div_layout.html.twig</argument>
                      <argument>LiipImagineBundle:Form:form_div_layout.html.twig</argument>
                    </argument>
                  </service>
                </argument>
                <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Mweb\AdminBundle\Twig\TwigExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Twig\AsseticExtension" public="false">
            <tag name="twig.extension"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service" id="assetic.asset_factory"/>
            <argument type="service" id="templating.name_parser"/>
            <argument>true</argument>
            <argument type="collection"/>
            <argument type="collection">
              <argument>FrameworkBundle</argument>
              <argument>SecurityBundle</argument>
              <argument>TwigBundle</argument>
              <argument>MonologBundle</argument>
              <argument>SwiftmailerBundle</argument>
              <argument>DoctrineBundle</argument>
              <argument>SensioFrameworkExtraBundle</argument>
              <argument>MwebAdminBundle</argument>
              <argument>MwebCoreBundle</argument>
              <argument>LexikTranslationBundle</argument>
              <argument>AsseticBundle</argument>
              <argument>FOSUserBundle</argument>
              <argument>StofDoctrineExtensionsBundle</argument>
              <argument>VichUploaderBundle</argument>
              <argument>LiipImagineBundle</argument>
              <argument>DebugBundle</argument>
              <argument>WebProfilerBundle</argument>
              <argument>SensioDistributionBundle</argument>
              <argument>SensioGeneratorBundle</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Bundle\AsseticBundle\DefaultValueSupplier" public="false">
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Vich\UploaderBundle\Twig\Extension\UploaderExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="vich_uploader.templating.helper.uploader_helper"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Liip\ImagineBundle\Templating\ImagineExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="liip_imagine.cache.manager"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="var_dumper.cloner"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service">
          <service class="Symfony\Bridge\Twig\AppVariable" public="false">
            <call method="setEnvironment">
              <argument>dev</argument>
            </call>
            <call method="setDebug">
              <argument>true</argument>
            </call>
            <call method="setTokenStorage">
              <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            </call>
            <call method="setRequestStack">
              <argument type="service" id="request_stack" on-invalid="ignore"/>
            </call>
          </service>
        </argument>
      </call>
      <configurator method="configure">
        <service class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
          <argument>F j, Y H:i</argument>
          <argument>%d days</argument>
          <argument>null</argument>
          <argument>0</argument>
          <argument>.</argument>
          <argument>,</argument>
        </service>
      </configurator>
    </service>
    <service id="twig.profile" class="Twig_Profiler_Profile"/>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception:showAction</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>/home/fab/Documents/Pro/www/circa/var/logs/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="port">null</argument>
        <argument key="dbname">circa</argument>
        <argument key="user">root</argument>
        <argument key="password">fabfab</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\DBAL\Configuration" public="false">
          <call method="setSQLLogger">
            <argument type="service">
              <service class="Doctrine\DBAL\Logging\LoggerChain" public="false">
                <call method="addLogger">
                  <argument type="service">
                    <service class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
                      <tag name="monolog.logger" channel="doctrine"/>
                      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
                      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
                <call method="addLogger">
                  <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
          <argument type="service" id="service_container"/>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
                <tag name="doctrine.event_subscriber" priority="50"/>
                <argument>parallax_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
                <tag name="doctrine.event_subscriber" priority="50"/>
                <argument>content_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
                <tag name="doctrine.event_subscriber" priority="50"/>
                <argument>artist_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
                <tag name="doctrine.event_subscriber" priority="50"/>
                <argument>news_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>content_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>parallax_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="FOS\UserBundle\Doctrine\UserListener" public="false">
                <tag name="doctrine.event_subscriber"/>
                <argument type="service" id="fos_user.util.password_updater"/>
                <argument type="service" id="fos_user.util.canonical_fields_updater"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Gedmo\Sluggable\SluggableListener" public="false">
                <tag name="doctrine.event_subscriber" connection="default"/>
                <call method="setAnnotationReader">
                  <argument type="service" id="annotation_reader"/>
                </call>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>parallax_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>news_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Gedmo\Timestampable\TimestampableListener" public="false">
                <tag name="doctrine.event_subscriber" connection="default"/>
                <call method="setAnnotationReader">
                  <argument type="service" id="annotation_reader"/>
                </call>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>content_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>news_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>content_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>news_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>parallax_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>artist_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>artist_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
                <tag name="doctrine.event_subscriber" priority="0"/>
                <argument>artist_image</argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
                </argument>
                <argument type="service" id="vich_uploader.metadata_reader"/>
                <argument type="service" id="vich_uploader.upload_handler"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="stof_doctrine_extensions.listener.translatable"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>loadClassMetadata</argument>
            </argument>
            <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
          </call>
        </service>
      </argument>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_0fc6806b46fed6128101d1ab10569c255a06697490434bc0d80931dac7980967</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_0fc6806b46fed6128101d1ab10569c255a06697490434bc0d80931dac7980967</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_0fc6806b46fed6128101d1ab10569c255a06697490434bc0d80931dac7980967</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service">
        <service class="Doctrine\ORM\Configuration" public="false">
          <call method="setEntityNamespaces">
            <argument type="collection">
              <argument key="MwebCoreBundle">Mweb\CoreBundle\Entity</argument>
              <argument key="MwebAdminBundle">Mweb\AdminBundle\Entity</argument>
              <argument key="LexikTranslationBundle">Lexik\Bundle\TranslationBundle\Entity</argument>
              <argument key="GedmoTranslatable">Gedmo\Translatable\Entity</argument>
            </argument>
          </call>
          <call method="setMetadataCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
          </call>
          <call method="setQueryCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
          </call>
          <call method="setResultCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
          </call>
          <call method="setMetadataDriverImpl">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/home/fab/Documents/Pro/www/circa/src/Mweb/CoreBundle/Entity</argument>
                        <argument>/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle/Entity</argument>
                        <argument>/home/fab/Documents/Pro/www/circa/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Mweb\CoreBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/home/fab/Documents/Pro/www/circa/src/Mweb/CoreBundle/Entity</argument>
                        <argument>/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle/Entity</argument>
                        <argument>/home/fab/Documents/Pro/www/circa/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Mweb\AdminBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/home/fab/Documents/Pro/www/circa/src/Mweb/CoreBundle/Entity</argument>
                        <argument>/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle/Entity</argument>
                        <argument>/home/fab/Documents/Pro/www/circa/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Gedmo\Translatable\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/config/doctrine">Lexik\Bundle\TranslationBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Lexik\Bundle\TranslationBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/config/model">Lexik\Bundle\TranslationBundle\Model</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Lexik\Bundle\TranslationBundle\Model</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
                      <argument type="service">
                        <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                          <argument type="collection">
                            <argument key="/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/config/doctrine-mapping">FOS\UserBundle\Model</argument>
                          </argument>
                          <argument>.orm.xml</argument>
                        </service>
                      </argument>
                    </service>
                  </argument>
                  <argument>FOS\UserBundle\Model</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setProxyDir">
            <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/doctrine/orm/Proxies</argument>
          </call>
          <call method="setProxyNamespace">
            <argument>Proxies</argument>
          </call>
          <call method="setAutoGenerateProxyClasses">
            <argument>true</argument>
          </call>
          <call method="setClassMetadataFactoryName">
            <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
          </call>
          <call method="setDefaultRepositoryClassName">
            <argument>Doctrine\ORM\EntityRepository</argument>
          </call>
          <call method="setNamingStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
            </argument>
          </call>
          <call method="setQuoteStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
            </argument>
          </call>
          <call method="setEntityListenerResolver">
            <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
          </call>
        </service>
      </argument>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service">
        <service class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
          <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
        </service>
      </argument>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service">
        <service class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
      </argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="mweb.admin.adminmenu" class="Mweb\AdminBundle\Listener\AdminMenu">
      <tag name="kernel.event_listener" event="kernel.response" method="showMenu"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="page" type="collection">
          <argument key="beautyName">Pages</argument>
          <argument key="menu">page</argument>
          <argument key="class">Mweb\CoreBundle\Entity\Content</argument>
          <argument key="form">Mweb\CoreBundle\Form\ContentType</argument>
          <argument key="listProperties" type="collection">
            <argument key="name" type="collection">
              <argument key="dataName">title</argument>
              <argument key="beautyName">Nom</argument>
              <argument key="type">string</argument>
            </argument>
            <argument key="updated" type="collection">
              <argument key="dataName">updated</argument>
              <argument key="beautyName">Mis à jour</argument>
              <argument key="type">date</argument>
            </argument>
            <argument key="created" type="collection">
              <argument key="dataName">created</argument>
              <argument key="beautyName">Ajouté le</argument>
              <argument key="type">date</argument>
            </argument>
            <argument key="status" type="collection">
              <argument key="dataName">status</argument>
              <argument key="beautyName">En ligne</argument>
              <argument key="type">boolean</argument>
            </argument>
          </argument>
          <argument key="views">default</argument>
          <argument key="unique">false</argument>
        </argument>
        <argument key="news" type="collection">
          <argument key="beautyName">Actualités</argument>
          <argument key="menu">news</argument>
          <argument key="class">Mweb\CoreBundle\Entity\News</argument>
          <argument key="form">\Mweb\CoreBundle\Form\NewsType</argument>
          <argument key="views">default</argument>
          <argument key="listProperties" type="collection">
            <argument key="name" type="collection">
              <argument key="dataName">title</argument>
              <argument key="beautyName">Nom</argument>
              <argument key="type">string</argument>
            </argument>
            <argument key="updated" type="collection">
              <argument key="dataName">updated</argument>
              <argument key="beautyName">Mis à jour</argument>
              <argument key="type">date</argument>
            </argument>
            <argument key="created" type="collection">
              <argument key="dataName">created</argument>
              <argument key="beautyName">Ajouté le</argument>
              <argument key="type">date</argument>
            </argument>
            <argument key="status" type="collection">
              <argument key="dataName">status</argument>
              <argument key="beautyName">En ligne</argument>
              <argument key="type">boolean</argument>
            </argument>
          </argument>
          <argument key="unique">false</argument>
        </argument>
        <argument key="artist" type="collection">
          <argument key="beautyName">Artistes</argument>
          <argument key="menu">artist</argument>
          <argument key="class">Mweb\CoreBundle\Entity\Artist</argument>
          <argument key="form">\Mweb\CoreBundle\Form\ArtistType</argument>
          <argument key="views">default</argument>
          <argument key="listProperties" type="collection">
            <argument key="name" type="collection">
              <argument key="dataName">title</argument>
              <argument key="beautyName">Nom</argument>
              <argument key="type">string</argument>
            </argument>
            <argument key="updated" type="collection">
              <argument key="dataName">updated</argument>
              <argument key="beautyName">Mis à jour</argument>
              <argument key="type">date</argument>
            </argument>
            <argument key="created" type="collection">
              <argument key="dataName">created</argument>
              <argument key="beautyName">Ajouté le</argument>
              <argument key="type">date</argument>
            </argument>
            <argument key="status" type="collection">
              <argument key="dataName">status</argument>
              <argument key="beautyName">En ligne</argument>
              <argument key="type">boolean</argument>
            </argument>
          </argument>
          <argument key="unique">false</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="page" type="collection">
          <argument key="beautyName">Pages</argument>
        </argument>
        <argument key="news" type="collection">
          <argument key="beautyName">Actualités</argument>
        </argument>
        <argument key="artist" type="collection">
          <argument key="beautyName">Artistes</argument>
        </argument>
      </argument>
    </service>
    <service id="lexik_translation.translator" class="Lexik\Bundle\TranslationBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.selector"/>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
        <argument key="lexik_translation.loader.database" type="collection">
          <argument>database</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/home/fab/Documents/Pro/www/circa/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
      </argument>
      <argument type="service" id="session" on-invalid="ignore"/>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>fr</argument>
        </argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fr.xlf</argument>
        <argument>fr</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle/Resources/translations/messages.fr.yml</argument>
        <argument>fr</argument>
        <argument>messages</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/home/fab/Documents/Pro/www/circa/src/Mweb/CoreBundle/Resources/translations/messages.fr.yml</argument>
        <argument>fr</argument>
        <argument>messages</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.fr.yml</argument>
        <argument>fr</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fr.yml</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fr.yml</argument>
        <argument>fr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/translations/VichUploaderBundle.fr.yml</argument>
        <argument>fr</argument>
        <argument>VichUploaderBundle</argument>
      </call>
      <call method="addDatabaseResources"/>
    </service>
    <service id="lexik_translation.loader.database" class="Lexik\Bundle\TranslationBundle\Translation\Loader\DatabaseLoader">
      <tag name="translation.loader" alias="database"/>
      <argument type="service" id="lexik_translation.translation_storage"/>
    </service>
    <service id="lexik_translation.trans_unit.manager" class="Lexik\Bundle\TranslationBundle\Manager\TransUnitManager">
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.file.manager"/>
      <argument>/home/fab/Documents/Pro/www/circa/app</argument>
    </service>
    <service id="lexik_translation.file.manager" class="Lexik\Bundle\TranslationBundle\Manager\FileManager">
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument>/home/fab/Documents/Pro/www/circa/app</argument>
    </service>
    <service id="lexik_translation.locale.manager" class="Lexik\Bundle\TranslationBundle\Manager\LocaleManager">
      <argument type="collection">
        <argument>fr</argument>
      </argument>
    </service>
    <service id="lexik_translation.importer.file" class="Lexik\Bundle\TranslationBundle\Translation\Importer\FileImporter">
      <argument type="collection">
        <argument key="php" type="service" id="translation.loader.php"/>
        <argument key="yml" type="service" id="translation.loader.yml"/>
        <argument key="xlf" type="service" id="translation.loader.xliff"/>
        <argument key="xliff" type="service" id="translation.loader.xliff"/>
        <argument key="po" type="service" id="translation.loader.po"/>
        <argument key="mo" type="service" id="translation.loader.mo"/>
        <argument key="ts" type="service" id="translation.loader.qt"/>
        <argument key="csv" type="service" id="translation.loader.csv"/>
        <argument key="res" type="service" id="translation.loader.res"/>
        <argument key="dat" type="service" id="translation.loader.dat"/>
        <argument key="ini" type="service" id="translation.loader.ini"/>
        <argument key="json" type="service" id="translation.loader.json"/>
        <argument key="database" type="service" id="lexik_translation.loader.database"/>
      </argument>
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.trans_unit.manager"/>
      <argument type="service" id="lexik_translation.file.manager"/>
      <call method="setCaseInsensitiveInsert">
        <argument>false</argument>
      </call>
    </service>
    <service id="lexik_translation.exporter_collector" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\ExporterCollector">
      <call method="addExporter">
        <argument>lexik_translation.exporter.xliff</argument>
        <argument type="service" id="lexik_translation.exporter.xliff"/>
      </call>
      <call method="addExporter">
        <argument>lexik_translation.exporter.json</argument>
        <argument type="service" id="lexik_translation.exporter.json"/>
      </call>
      <call method="addExporter">
        <argument>lexik_translation.exporter.yml</argument>
        <argument type="service" id="lexik_translation.exporter.yml"/>
      </call>
      <call method="addExporter">
        <argument>lexik_translation.exporter.php</argument>
        <argument type="service" id="lexik_translation.exporter.php"/>
      </call>
    </service>
    <service id="lexik_translation.exporter.xliff" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\XliffExporter">
      <tag name="lexik_translation.exporter" alias="xlf"/>
    </service>
    <service id="lexik_translation.exporter.json" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\JsonExporter">
      <tag name="lexik_translation.exporter" alias="json"/>
      <argument>false</argument>
    </service>
    <service id="lexik_translation.exporter.yml" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\YamlExporter">
      <tag name="lexik_translation.exporter" alias="yml"/>
      <argument>false</argument>
    </service>
    <service id="lexik_translation.exporter.php" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\PhpExporter">
      <tag name="lexik_translation.exporter" alias="php"/>
    </service>
    <service id="lexik_translation.data_grid.formatter" class="Lexik\Bundle\TranslationBundle\Util\DataGrid\DataGridFormatter">
      <argument type="service" id="lexik_translation.locale.manager"/>
      <argument>orm</argument>
    </service>
    <service id="lexik_translation.data_grid.request_handler" class="Lexik\Bundle\TranslationBundle\Util\DataGrid\DataGridRequestHandler">
      <argument type="service" id="lexik_translation.trans_unit.manager"/>
      <argument type="service" id="lexik_translation.file.manager"/>
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.locale.manager"/>
      <call method="setCreateMissing">
        <argument>false</argument>
      </call>
      <call method="setDefaultFileFormat">
        <argument>yml</argument>
      </call>
    </service>
    <service id="lexik_translation.overview.stats_aggregator" class="Lexik\Bundle\TranslationBundle\Util\Overview\StatsAggregator">
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.locale.manager"/>
    </service>
    <service id="lexik_translation.form.handler.trans_unit" class="Lexik\Bundle\TranslationBundle\Form\Handler\TransUnitFormHandler">
      <argument type="service" id="lexik_translation.trans_unit.manager"/>
      <argument type="service" id="lexik_translation.file.manager"/>
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.locale.manager"/>
      <argument>/home/fab/Documents/Pro/www/circa/app</argument>
    </service>
    <service id="lexik_translation.listener.get_database_resources" class="Lexik\Bundle\TranslationBundle\EventDispatcher\GetDatabaseResourcesListener">
      <tag name="kernel.event_listener" event="lexik_translation.event.get_database_resources" method="onGetDatabaseResources"/>
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument>orm</argument>
    </service>
    <service id="lexik_translation.translation_storage" class="lexik_translation.orm.translation_storage.class">
      <argument type="service" id="doctrine"/>
      <argument>default</argument>
      <argument type="collection">
        <argument key="trans_unit">%lexik_translation.orm.trans_unit.class%</argument>
        <argument key="translation">%lexik_translation.orm.translation.class%</argument>
        <argument key="file">%lexik_translation.orm.file.class%</argument>
      </argument>
    </service>
    <service id="lexik_translation.listener.clean_translation_cache" class="Lexik\Bundle\TranslationBundle\EventDispatcher\CleanTranslationCacheListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="translator"/>
      <argument>%kernel.cache_dir%</argument>
      <argument type="service" id="lexik_translation.locale.manager"/>
      <argument>null</argument>
    </service>
    <service id="assetic.filter_manager" class="Symfony\Bundle\AsseticBundle\FilterManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="cssrewrite">assetic.filter.cssrewrite</argument>
      </argument>
    </service>
    <service id="assetic.asset_manager" class="Assetic\Factory\LazyAssetManager">
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="collection">
        <argument key="twig" type="service">
          <service class="Assetic\Factory\Loader\CachedFormulaLoader" public="false">
            <tag name="assetic.formula_loader" alias="twig"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service">
              <service class="Assetic\Extension\Twig\TwigFormulaLoader" public="false">
                <tag name="assetic.templating.twig"/>
                <tag name="monolog.logger" channel="assetic"/>
                <argument type="service" id="twig"/>
                <argument type="service" id="monolog.logger.assetic" on-invalid="ignore"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Assetic\Cache\ConfigCache" public="false">
                <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/assetic/config</argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </argument>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>FrameworkBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/FrameworkBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>FrameworkBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SecurityBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/SecurityBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SecurityBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>TwigBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/TwigBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>TwigBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>MonologBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/MonologBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>MonologBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/monolog-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SwiftmailerBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/SwiftmailerBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SwiftmailerBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>DoctrineBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/DoctrineBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>DoctrineBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/doctrine/doctrine-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SensioFrameworkExtraBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/SensioFrameworkExtraBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SensioFrameworkExtraBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/sensio/framework-extra-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>MwebAdminBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/MwebAdminBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>MwebAdminBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>MwebCoreBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/MwebCoreBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>MwebCoreBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/src/Mweb/CoreBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>LexikTranslationBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/LexikTranslationBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>LexikTranslationBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AsseticBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/AsseticBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AsseticBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/assetic-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>FOSUserBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/FOSUserBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>FOSUserBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>StofDoctrineExtensionsBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/StofDoctrineExtensionsBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>StofDoctrineExtensionsBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/stof/doctrine-extensions-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>VichUploaderBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/VichUploaderBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>VichUploaderBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>LiipImagineBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/LiipImagineBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>LiipImagineBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/liip/imagine-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>DebugBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/DebugBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>DebugBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>WebProfilerBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/WebProfilerBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>WebProfilerBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SensioDistributionBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/SensioDistributionBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SensioDistributionBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/sensio/distribution-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SensioGeneratorBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/app/Resources/SensioGeneratorBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>SensioGeneratorBundle</argument>
                  <argument>/home/fab/Documents/Pro/www/circa/vendor/sensio/generator-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="service" id="templating.loader"/>
            <argument></argument>
            <argument>/home/fab/Documents/Pro/www/circa/app/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
    </service>
    <service id="assetic.asset_factory" class="Symfony\Bundle\AsseticBundle\Factory\AssetFactory" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag" public="false">
          <factory service="service_container" method="getParameterBag"/>
        </service>
      </argument>
      <argument>/home/fab/Documents/Pro/www/circa/app/../web</argument>
      <argument>true</argument>
      <call method="addWorker">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Worker\UseControllerWorker" public="false">
            <tag name="assetic.factory_worker"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="assetic.filter.cssrewrite" class="Assetic\Filter\CssRewriteFilter">
      <tag name="assetic.filter" alias="cssrewrite"/>
    </service>
    <service id="assetic.controller" class="Symfony\Bundle\AsseticBundle\Controller\AsseticController">
      <argument type="service" id="assetic.asset_manager"/>
      <argument type="service">
        <service class="Assetic\Cache\FilesystemCache" public="false">
          <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/assetic/assets</argument>
        </service>
      </argument>
      <argument>false</argument>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="assetic.request_listener" class="Symfony\Bundle\AsseticBundle\EventListener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\EventListener\LastLoginListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user_checker.main"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="fos_user.user_provider.username" class="FOS\UserBundle\Security\UserProvider" public="false">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fos_user.util.password_updater" class="FOS\UserBundle\Util\PasswordUpdater" public="false">
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="fos_user.util.canonical_fields_updater" class="FOS\UserBundle\Util\CanonicalFieldsUpdater" public="false">
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
    </service>
    <service id="fos_user.listener.authentication" class="FOS\UserBundle\EventListener\AuthenticationListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.security.login_manager"/>
      <argument>main</argument>
    </service>
    <service id="fos_user.listener.flash" class="FOS\UserBundle\EventListener\FlashListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service">
        <service class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
          <argument type="service" id="fos_user.user_manager"/>
        </service>
      </argument>
    </service>
    <service id="fos_user.profile.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_profile_form</argument>
      <argument>FOS\UserBundle\Form\Type\ProfileFormType</argument>
      <argument type="collection">
        <argument>Profile</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>Mweb\AdminBundle\Entity\User</argument>
    </service>
    <service id="fos_user.registration.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_registration_form</argument>
      <argument>FOS\UserBundle\Form\Type\RegistrationFormType</argument>
      <argument type="collection">
        <argument>Registration</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>Mweb\AdminBundle\Entity\User</argument>
    </service>
    <service id="fos_user.change_password.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_change_password_form</argument>
      <argument>FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
      <argument type="collection">
        <argument>ChangePassword</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
      <argument>Mweb\AdminBundle\Entity\User</argument>
    </service>
    <service id="fos_user.resetting.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_resetting_form</argument>
      <argument>FOS\UserBundle\Form\Type\ResettingFormType</argument>
      <argument type="collection">
        <argument>ResetPassword</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
      <argument>Mweb\AdminBundle\Entity\User</argument>
    </service>
    <service id="fos_user.listener.resetting" class="FOS\UserBundle\EventListener\ResettingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="router"/>
      <argument>86400</argument>
    </service>
    <service id="stof_doctrine_extensions.listener.translatable" class="Gedmo\Translatable\TranslatableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default" priority="-10"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="setDefaultLocale">
        <argument>fr_FR</argument>
      </call>
      <call method="setTranslatableLocale">
        <argument>fr_FR</argument>
      </call>
      <call method="setTranslationFallback">
        <argument>true</argument>
      </call>
      <call method="setPersistDefaultLocaleTranslation">
        <argument>false</argument>
      </call>
      <call method="setSkipOnLoad">
        <argument>false</argument>
      </call>
    </service>
    <service id="stof_doctrine_extensions.event_listener.locale" class="Stof\DoctrineExtensionsBundle\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="stof_doctrine_extensions.listener.translatable"/>
    </service>
    <service id="stof_doctrine_extensions.uploadable.manager" class="Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager">
      <argument type="service">
        <service class="Gedmo\Uploadable\UploadableListener" public="false">
          <argument type="service">
            <service class="Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter" public="false"/>
          </argument>
          <call method="setAnnotationReader">
            <argument type="service" id="annotation_reader"/>
          </call>
          <call method="setDefaultFileInfoClass">
            <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
          </call>
        </service>
      </argument>
      <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
    </service>
    <service id="vich_uploader.templating.helper.uploader_helper" class="Vich\UploaderBundle\Templating\Helper\UploaderHelper">
      <tag name="templating.helper" alias="vich_uploader"/>
      <argument type="service" id="vich_uploader.storage"/>
    </service>
    <service id="vich_uploader.metadata_reader" class="Vich\UploaderBundle\Metadata\MetadataReader" public="false">
      <argument type="service">
        <service class="Metadata\MetadataFactory" public="false">
          <argument type="service">
            <service class="Vich\UploaderBundle\Metadata\Driver\ChainDriver" public="false">
              <argument type="collection">
                <argument type="service">
                  <service class="Vich\UploaderBundle\Metadata\Driver\AnnotationDriver" public="false">
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Metadata\Driver\YamlDriver" public="false">
                    <argument type="service">
                      <service class="Vich\UploaderBundle\Metadata\Driver\FileLocator" public="false">
                        <argument type="collection"/>
                      </service>
                    </argument>
                  </service>
                </argument>
                <argument type="service">
                  <service class="Vich\UploaderBundle\Metadata\Driver\XmlDriver" public="false">
                    <argument type="service">
                      <service class="Vich\UploaderBundle\Metadata\Driver\FileLocator" public="false">
                        <argument type="collection"/>
                      </service>
                    </argument>
                  </service>
                </argument>
              </argument>
            </service>
          </argument>
          <argument>Metadata\ClassHierarchyMetadata</argument>
          <argument>true</argument>
          <call method="setCache">
            <argument type="service">
              <service class="Metadata\Cache\FileCache" public="false">
                <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/vich_uploader</argument>
              </service>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="vich_uploader.property_mapping_factory" class="Vich\UploaderBundle\Mapping\PropertyMappingFactory" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="collection">
        <argument key="content_image" type="collection">
          <argument key="uri_prefix">/files/uploads/content</argument>
          <argument key="upload_destination">/home/fab/Documents/Pro/www/circa/app/../web/files/uploads/content</argument>
          <argument key="inject_on_load">true</argument>
          <argument key="namer" type="collection">
            <argument key="service">null</argument>
            <argument key="options">null</argument>
          </argument>
          <argument key="directory_namer">null</argument>
          <argument key="delete_on_remove">true</argument>
          <argument key="delete_on_update">true</argument>
          <argument key="db_driver">orm</argument>
        </argument>
        <argument key="parallax_image" type="collection">
          <argument key="uri_prefix">/files/uploads/content</argument>
          <argument key="upload_destination">/home/fab/Documents/Pro/www/circa/app/../web/files/uploads/content</argument>
          <argument key="inject_on_load">true</argument>
          <argument key="namer" type="collection">
            <argument key="service">null</argument>
            <argument key="options">null</argument>
          </argument>
          <argument key="directory_namer">null</argument>
          <argument key="delete_on_remove">true</argument>
          <argument key="delete_on_update">true</argument>
          <argument key="db_driver">orm</argument>
        </argument>
        <argument key="news_image" type="collection">
          <argument key="uri_prefix">/files/uploads/news</argument>
          <argument key="upload_destination">/home/fab/Documents/Pro/www/circa/app/../web/files/uploads/news</argument>
          <argument key="inject_on_load">true</argument>
          <argument key="namer" type="collection">
            <argument key="service">null</argument>
            <argument key="options">null</argument>
          </argument>
          <argument key="directory_namer">null</argument>
          <argument key="delete_on_remove">true</argument>
          <argument key="delete_on_update">true</argument>
          <argument key="db_driver">orm</argument>
        </argument>
        <argument key="artist_image" type="collection">
          <argument key="uri_prefix">/files/uploads/artist</argument>
          <argument key="upload_destination">/home/fab/Documents/Pro/www/circa/app/../web/files/uploads/artist</argument>
          <argument key="inject_on_load">true</argument>
          <argument key="namer" type="collection">
            <argument key="service">null</argument>
            <argument key="options">null</argument>
          </argument>
          <argument key="directory_namer">null</argument>
          <argument key="delete_on_remove">true</argument>
          <argument key="delete_on_update">true</argument>
          <argument key="db_driver">orm</argument>
        </argument>
      </argument>
      <argument>_name</argument>
    </service>
    <service id="vich_uploader.namer_uniqid" class="Vich\UploaderBundle\Naming\UniqidNamer"/>
    <service id="vich_uploader.namer_property" class="Vich\UploaderBundle\Naming\PropertyNamer"/>
    <service id="vich_uploader.namer_origname" class="Vich\UploaderBundle\Naming\OrignameNamer"/>
    <service id="vich_uploader.form.type.file" class="Vich\UploaderBundle\Form\Type\VichFileType">
      <tag name="form.type" alias="vich_file"/>
      <argument type="service" id="vich_uploader.storage"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="vich_uploader.form.type.image" class="Vich\UploaderBundle\Form\Type\VichImageType">
      <tag name="form.type" alias="vich_image"/>
      <argument type="service" id="vich_uploader.storage"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="vich_uploader.download_handler" class="Vich\UploaderBundle\Handler\DownloadHandler">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="vich_uploader.storage"/>
    </service>
    <service id="vich_uploader.upload_handler" class="Vich\UploaderBundle\Handler\UploadHandler">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="vich_uploader.storage"/>
      <argument type="service">
        <service class="Vich\UploaderBundle\Injector\FileInjector" public="false">
          <argument type="service" id="vich_uploader.storage"/>
        </service>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="liip_imagine.cache.resolver.default" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver">
      <tag name="liip_imagine.cache.resolver" resolver="default"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument>/home/fab/Documents/Pro/www/circa/app/../web</argument>
      <argument>media/cache</argument>
    </service>
    <service id="liip_imagine.binary.loader.default" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <tag name="liip_imagine.binary.loader" loader="default"/>
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument type="collection">
        <argument>/home/fab/Documents/Pro/www/circa/app/../web</argument>
      </argument>
    </service>
    <service id="liip_imagine.filter.manager" class="Liip\ImagineBundle\Imagine\Filter\FilterManager">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="liip_imagine"/>
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <call method="addLoader">
        <argument>relative_resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.relative_resize"/>
      </call>
      <call method="addLoader">
        <argument>resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.resize"/>
      </call>
      <call method="addLoader">
        <argument>thumbnail</argument>
        <argument type="service" id="liip_imagine.filter.loader.thumbnail"/>
      </call>
      <call method="addLoader">
        <argument>crop</argument>
        <argument type="service" id="liip_imagine.filter.loader.crop"/>
      </call>
      <call method="addLoader">
        <argument>grayscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.grayscale"/>
      </call>
      <call method="addLoader">
        <argument>paste</argument>
        <argument type="service" id="liip_imagine.filter.loader.paste"/>
      </call>
      <call method="addLoader">
        <argument>watermark</argument>
        <argument type="service" id="liip_imagine.filter.loader.watermark"/>
      </call>
      <call method="addLoader">
        <argument>background</argument>
        <argument type="service" id="liip_imagine.filter.loader.background"/>
      </call>
      <call method="addLoader">
        <argument>strip</argument>
        <argument type="service" id="liip_imagine.filter.loader.strip"/>
      </call>
      <call method="addLoader">
        <argument>scale</argument>
        <argument type="service" id="liip_imagine.filter.loader.scale"/>
      </call>
      <call method="addLoader">
        <argument>upscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.upscale"/>
      </call>
      <call method="addLoader">
        <argument>downscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.downscale"/>
      </call>
      <call method="addLoader">
        <argument>auto_rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.auto_rotate"/>
      </call>
      <call method="addLoader">
        <argument>rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.rotate"/>
      </call>
      <call method="addLoader">
        <argument>interlace</argument>
        <argument type="service" id="liip_imagine.filter.loader.interlace"/>
      </call>
      <call method="addPostProcessor">
        <argument>jpegoptim</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.jpegoptim"/>
      </call>
      <call method="addPostProcessor">
        <argument>optipng</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.optipng"/>
      </call>
      <call method="addPostProcessor">
        <argument>pngquant</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.pngquant"/>
      </call>
      <call method="addPostProcessor">
        <argument>mozjpeg</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.mozjpeg"/>
      </call>
    </service>
    <service id="liip_imagine.data.manager" class="Liip\ImagineBundle\Imagine\Data\DataManager">
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument>default</argument>
      <argument>null</argument>
      <call method="addLoader">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.binary.loader.default"/>
      </call>
    </service>
    <service id="liip_imagine.cache.manager" class="Liip\ImagineBundle\Imagine\Cache\CacheManager">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="router"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>default</argument>
      <call method="addResolver">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.cache.resolver.default"/>
      </call>
      <call method="addResolver">
        <argument>no_cache</argument>
        <argument type="service" id="liip_imagine.cache.resolver.no_cache_web_path"/>
      </call>
    </service>
    <service id="liip_imagine.filter.configuration" class="Liip\ImagineBundle\Imagine\Filter\FilterConfiguration">
      <argument type="collection">
        <argument key="cache" type="collection">
          <argument key="quality">100</argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="filters" type="collection"/>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="partner" type="collection">
          <argument key="quality">150</argument>
          <argument key="filters" type="collection">
            <argument key="thumbnail" type="collection">
              <argument key="size" type="collection">
                <argument>150</argument>
              </argument>
              <argument key="mode">outbound</argument>
            </argument>
          </argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="news" type="collection">
          <argument key="quality">100</argument>
          <argument key="filters" type="collection">
            <argument key="thumbnail" type="collection">
              <argument key="size" type="collection">
                <argument>420</argument>
              </argument>
              <argument key="mode">outbound</argument>
            </argument>
          </argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="parallax" type="collection">
          <argument key="quality">80</argument>
          <argument key="filters" type="collection">
            <argument key="thumbnail" type="collection">
              <argument key="size" type="collection">
                <argument>1920</argument>
                <argument>400</argument>
              </argument>
              <argument key="mode">outbound</argument>
            </argument>
          </argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="artist" type="collection">
          <argument key="quality">80</argument>
          <argument key="filters" type="collection">
            <argument key="thumbnail" type="collection">
              <argument key="size" type="collection">
                <argument>800</argument>
                <argument>600</argument>
              </argument>
              <argument key="mode">outbound</argument>
            </argument>
          </argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
      </argument>
    </service>
    <service id="liip_imagine.controller" class="Liip\ImagineBundle\Controller\ImagineController">
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="liip_imagine.templating.helper" class="Liip\ImagineBundle\Templating\Helper\ImagineHelper">
      <tag name="templating.helper" alias="imagine"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
    </service>
    <service id="liip_imagine.filter.loader.relative_resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="relative_resize"/>
    </service>
    <service id="liip_imagine.filter.loader.resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="resize"/>
    </service>
    <service id="liip_imagine.filter.loader.thumbnail" class="Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="thumbnail"/>
    </service>
    <service id="liip_imagine.filter.loader.crop" class="Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="crop"/>
    </service>
    <service id="liip_imagine.filter.loader.grayscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="grayscale"/>
    </service>
    <service id="liip_imagine.filter.loader.paste" class="Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="paste"/>
      <argument type="service" id="liip_imagine"/>
      <argument>/home/fab/Documents/Pro/www/circa/app</argument>
    </service>
    <service id="liip_imagine.filter.loader.watermark" class="Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="watermark"/>
      <argument type="service" id="liip_imagine"/>
      <argument>/home/fab/Documents/Pro/www/circa/app</argument>
    </service>
    <service id="liip_imagine.filter.loader.background" class="Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="background"/>
      <argument type="service" id="liip_imagine"/>
    </service>
    <service id="liip_imagine.filter.loader.strip" class="Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="strip"/>
    </service>
    <service id="liip_imagine.filter.loader.scale" class="Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="scale"/>
    </service>
    <service id="liip_imagine.filter.loader.upscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="upscale"/>
    </service>
    <service id="liip_imagine.filter.loader.downscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="downscale"/>
    </service>
    <service id="liip_imagine.filter.loader.auto_rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="auto_rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.interlace" class="Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="interlace"/>
    </service>
    <service id="liip_imagine.binary.loader.prototype.filesystem" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.stream" class="Liip\ImagineBundle\Binary\Loader\StreamLoader">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.no_cache_web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver">
      <tag name="liip_imagine.cache.resolver" resolver="no_cache"/>
      <argument type="service" id="router.request_context"/>
    </service>
    <service id="liip_imagine.form.type.image" class="Liip\ImagineBundle\Form\Type\ImageType">
      <tag name="form.type" alias="liip_imagine_image"/>
    </service>
    <service id="liip_imagine.mime_type_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.extension_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.binary.mime_type_guesser" class="Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
    </service>
    <service id="liip_imagine.cache.signer" class="Liip\ImagineBundle\Imagine\Cache\Signer">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.jpegoptim" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="jpegoptim"/>
      <argument>/usr/bin/jpegoptim</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.optipng" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="optipng"/>
      <argument>/usr/bin/optipng</argument>
      <argument>7</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.pngquant" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="pngquant"/>
      <argument>/usr/bin/pngquant</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.mozjpeg" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="mozjpeg"/>
      <argument>/opt/mozjpeg/bin/cjpeg</argument>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.cli_dumper"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController">
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="data_collector.request" type="collection">
          <argument>request</argument>
          <argument>@WebProfiler/Collector/request.html.twig</argument>
        </argument>
        <argument key="data_collector.time" type="collection">
          <argument>time</argument>
          <argument>@WebProfiler/Collector/time.html.twig</argument>
        </argument>
        <argument key="data_collector.memory" type="collection">
          <argument>memory</argument>
          <argument>@WebProfiler/Collector/memory.html.twig</argument>
        </argument>
        <argument key="data_collector.ajax" type="collection">
          <argument>ajax</argument>
          <argument>@WebProfiler/Collector/ajax.html.twig</argument>
        </argument>
        <argument key="data_collector.form" type="collection">
          <argument>form</argument>
          <argument>@WebProfiler/Collector/form.html.twig</argument>
        </argument>
        <argument key="data_collector.exception" type="collection">
          <argument>exception</argument>
          <argument>@WebProfiler/Collector/exception.html.twig</argument>
        </argument>
        <argument key="data_collector.logger" type="collection">
          <argument>logger</argument>
          <argument>@WebProfiler/Collector/logger.html.twig</argument>
        </argument>
        <argument key="data_collector.events" type="collection">
          <argument>events</argument>
          <argument>@WebProfiler/Collector/events.html.twig</argument>
        </argument>
        <argument key="data_collector.router" type="collection">
          <argument>router</argument>
          <argument>@WebProfiler/Collector/router.html.twig</argument>
        </argument>
        <argument key="data_collector.translation" type="collection">
          <argument>translation</argument>
          <argument>@WebProfiler/Collector/translation.html.twig</argument>
        </argument>
        <argument key="data_collector.security" type="collection">
          <argument>security</argument>
          <argument>@Security/Collector/security.html.twig</argument>
        </argument>
        <argument key="data_collector.twig" type="collection">
          <argument>twig</argument>
          <argument>@WebProfiler/Collector/twig.html.twig</argument>
        </argument>
        <argument key="data_collector.doctrine" type="collection">
          <argument>db</argument>
          <argument>@Doctrine/Collector/db.html.twig</argument>
        </argument>
        <argument key="swiftmailer.data_collector" type="collection">
          <argument>swiftmailer</argument>
          <argument>@Swiftmailer/Collector/swiftmailer.html.twig</argument>
        </argument>
        <argument key="data_collector.dump" type="collection">
          <argument>dump</argument>
          <argument>@Debug/Profiler/dump.html.twig</argument>
        </argument>
        <argument key="data_collector.config" type="collection">
          <argument>config</argument>
          <argument>@WebProfiler/Collector/config.html.twig</argument>
        </argument>
      </argument>
      <argument>bottom</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
      <argument>^/(app(_[\w]+)?\.php/)?_wdt</argument>
    </service>
    <service id="sensio_distribution.security_checker" class="SensioLabs\Security\SecurityChecker"/>
    <service id="sensio_distribution.security_checker.command" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="sensio_distribution.security_checker"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.assetic" class="Symfony\Bridge\Monolog\Logger">
      <argument>assetic</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.handler.debug" class="Symfony\Bridge\Monolog\Handler\DebugHandler">
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
      <argument>/home/fab/Documents/Pro/www/circa/app/../var/sessions/dev</argument>
    </service>
    <service id="templating.loader" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating" class="Symfony\Bundle\TwigBundle\TwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
      <autowiring-type>Symfony\Component\Templating\EngineInterface</autowiring-type>
      <autowiring-type>Symfony\Bundle\FrameworkBundle\Templating\EngineInterface</autowiring-type>
    </service>
    <service id="translator" class="Symfony\Component\Translation\DataCollectorTranslator">
      <argument type="service">
        <service class="Symfony\Component\Translation\LoggingTranslator" public="false">
          <tag name="monolog.logger" channel="translation"/>
          <argument type="service" id="lexik_translation.translator"/>
          <argument type="service" id="monolog.logger.translation"/>
        </service>
      </argument>
    </service>
    <service id="router" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/assetic/routing.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/home/fab/Documents/Pro/www/circa/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">yaml</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\CachedReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false">
          <autowiring-type>Doctrine\Common\Annotations\Reader</autowiring-type>
        </service>
      </argument>
      <argument type="service">
        <service class="Doctrine\Common\Cache\FilesystemCache" public="false">
          <argument>/home/fab/Documents/Pro/www/circa/var/cache/dev/annotations</argument>
        </service>
      </argument>
      <argument>true</argument>
      <autowiring-type>Doctrine\Common\Annotations\Reader</autowiring-type>
    </service>
    <service id="security.encoder_factory" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="FOS\UserBundle\Model\UserInterface" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>13</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.password_encoder" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.user_checker.main" class="Symfony\Component\Security\Core\User\UserChecker"/>
    <service id="logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
      <autowiring-type>Psr\Log\LoggerInterface</autowiring-type>
    </service>
    <service id="swiftmailer.mailer.default.transport" class="Swift_Transport_SpoolTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.spool" class="Swift_MemorySpool"/>
    <service id="swiftmailer.mailer.default.transport.real" class="Swift_Transport_EsmtpTransport">
      <argument type="service">
        <service class="Swift_Transport_StreamBuffer" public="false">
          <argument type="service">
            <service class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
          </argument>
        </service>
      </argument>
      <argument type="collection">
        <argument type="service">
          <service class="Swift_Transport_Esmtp_AuthHandler" public="false">
            <argument type="collection">
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
              </argument>
            </argument>
            <call method="setUsername">
              <argument>null</argument>
            </call>
            <call method="setPassword">
              <argument>null</argument>
            </call>
            <call method="setAuthMode">
              <argument>null</argument>
            </call>
          </service>
        </argument>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>127.0.0.1</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
      <configurator method="configure">
        <service class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false">
          <argument>null</argument>
          <argument type="service" id="router.request_context" on-invalid="null"/>
        </service>
      </configurator>
    </service>
    <service id="fos_user.mailer" class="FOS\UserBundle\Mailer\Mailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router"/>
      <argument type="service" id="templating"/>
      <argument type="collection">
        <argument key="confirmation.template">@FOSUser/Registration/email.txt.twig</argument>
        <argument key="resetting.template">@FOSUser/Resetting/email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="blop@niche.com">FAB</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="blop@niche.com">FAB</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.util.email_canonicalizer" class="FOS\UserBundle\Util\Canonicalizer"/>
    <service id="fos_user.util.token_generator" class="FOS\UserBundle\Util\TokenGenerator"/>
    <service id="fos_user.user_manager" class="FOS\UserBundle\Doctrine\UserManager" lazy="true">
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service">
        <service class="Doctrine\Common\Persistence\ObjectManager" public="false">
          <argument>null</argument>
          <factory service="doctrine" method="getManager"/>
        </service>
      </argument>
      <argument>Mweb\AdminBundle\Entity\User</argument>
    </service>
    <service id="vich_uploader.storage" class="Vich\UploaderBundle\Storage\FileSystemStorage">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
    </service>
    <service id="liip_imagine" class="Imagine\Gd\Imagine">
      <call method="setMetadataReader">
        <argument type="service">
          <service class="Imagine\Image\Metadata\ExifMetadataReader" public="false"/>
        </argument>
      </call>
    </service>
    <service id="twig.loader" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle/Resources/views</argument>
        <argument>MwebAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/mweb/admin-bundle/Mweb/AdminBundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/src/Mweb/CoreBundle/Resources/views</argument>
        <argument>MwebCore</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/lexik/translation-bundle/Resources/views</argument>
        <argument>LexikTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/vich/uploader-bundle/Resources/views</argument>
        <argument>VichUploader</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/liip/imagine-bundle/Resources/views</argument>
        <argument>LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/home/fab/Documents/Pro/www/circa/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.real"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.email_canonicalizer"/>
    <service id="console.command.sensiolabs_security_command_securitycheckercommand" alias="sensio_distribution.security_checker.command"/>
  </services>
</container>
